---
- hosts: 10.0.1.111 
  any_errors_fatal: false 
  tasks:
    - name: Install Docker 
      apt:
        name: docker.io  
        state: present 
        update_cache: true

    - name: Reboot
      reboot:

    - name: Add the packages.cloud.google.com apt key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
    
    - name: Install k8s dep repository
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Install k8s modules
      apt:
        name: "{{ item }}"
        state: present
        update_cache: false 
      loop:
        - kubelet 
        - kubeadm 
        - kubectl

    - name: Disable regular updates of k8s modules
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet 
        - kubeadm 
        - kubectl

    - name: Reboot
      reboot:
       
    - name: Check if daemon.json already exists
      stat: path=/etc/docker/daemon.json
      register: stat_daemon_json

    - name: Create daemon.json
      copy:
        dest: "/etc/docker/daemon.json"
        content: |
          {
            "exec-opts": ["native.cgroupdriver=systemd"],
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "100m"
            },
            "storage-driver": "overlay2"
          }
      when: stat_daemon_json.stat.exists == false
    
    - name: Test for line
      shell: "grep -c cgroup /boot/firmware/cmdline.txt"
      register: cgroup_chk
      failed_when: cgroup_chk.rc != 1 and cgroup_chk.rc != 0

    - name: Tack to the end of line  
      shell: sed -i '$ s/$/ cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1/' /boot/firmware/cmdline.txt
      when: cgroup_chk.stdout == "0" 
      args:
        warn: false
    
    - name: Reboot
      reboot:

    - name: Check if k8s.conf already exists
      stat: path=/etc/sysctl.d/k8s.conf
      register: stat_k8s_conf

    - name: Create k8s.conf 
      copy:
        dest: "/etc/sysctl.d/k8s.conf"
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1      
      when: stat_k8s_conf.stat.exists == false

    - name: Join Cluster
      shell: "kubeadm join 10.0.1.110:6443 --token 0bltg1.lmqqwtlrqh2hl7wb --discovery-token-ca-cert-hash sha256:c0150d94620c30c8d09600113d3847a194eb96b5fc264d771a63417dd1c21007"
      
    - name: Reboot
      reboot:
