---
#
- name: Setup Passwordless SSH 
  hosts: "{{ tgt_node | default('localhost') }}" 
  connection: local
  any_errors_fatal: false 
  gather_facts: false

  vars_prompt:
    - name: user_id
      prompt: "Remote User ID"
      private: no

    - name: user_password
      prompt: "Remote User's password"

    - name: groups_var 
      prompt: "Define which Group to setup"
      private: no

  vars:
    ssh_known_hosts_file: "{{ lookup('env','HOME') + '/.ssh/known_hosts' }}"
    ssh_public_key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
    ssh_known_hosts: "{{ groups[groups_var] | default('all') }}"

  tasks:
  - name: For each host, scan for its ssh public key
    shell: "ssh-keyscan {{ item }},`dig +short {{ item }}`"
    with_items: "{{ ssh_known_hosts }}"
    register: ssh_known_host_results
    ignore_errors: yes

  - name: Remove the public key in the '{{ ssh_known_hosts_file }}'
    known_hosts:
      name: "{{ item.item }}"
      state: "absent"
      path: "{{ ssh_known_hosts_file }}"
    with_items: "{{ ssh_known_host_results.results }}"
    when: user_password is defined and user_id is defined and groups_var is defined

  - name: ssh-copy-id local public key
    command: "sshpass -p '{{ user_password }}' ssh-copy-id -i '/root/.ssh/id_rsa.pub' '{{ user_id }}'@'{{ item }}' -o StrictHostKeyChecking=no"
    with_items: "{{ ssh_known_hosts }}"
    ignore_errors: yes
    when: user_password is defined and user_id is defined and groups_var is defined
